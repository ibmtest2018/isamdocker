apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: sam9050
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: isamconfig
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 50Mi
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: postgresqldata
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 50Mi
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ldaplib
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 50Mi
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ldapslapd
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 50Mi
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ldapsecauthority
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 50Mi
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      app: isamconfig
    name: isamconfig
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: isamconfig
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: isamconfig
      spec:
        serviceAccountName: isam
        containers:
        - env:
          - name: SERVICE
            value: config
          - name: CONTAINER_TIMEZONE
            value: Europe/London
          - name: ADMIN_PWD
            valueFrom:
              secretKeyRef:
                key: adminpw
                name: samadmin
          image: docker.io/store/ibmcorp/isam:9.0.5.0
          imagePullPolicy: IfNotPresent
          name: isamconfig
          # Fix for PVC ownership root:root. This allows www-data user to access.
          command: ["/bin/sh"]
          args: ["-c","chmod 775 /var/shared;/sbin/bootstrap.sh"]
          resources: {}
          securityContext:
            capabilities:
              add:
              - SYS_PTRACE
              - SYS_RESOURCE
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/shared
            name: isamconfig
          - mountPath: /var/application.logs
            name: isamconfig-logs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: dockerlogin
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: isamconfig
          persistentVolumeClaim:
            claimName: isamconfig
        - name: isamconfig-logs
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      app: isamdsc
    name: isamdsc
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: isamdsc
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: isamdsc
      spec:
        serviceAccountName: isam
        containers:
        - env:
          - name: SERVICE
            value: dsc
          - name: INSTANCE
            value: "1"
          - name: CONTAINER_TIMEZONE
            value: Europe/London
          - name: AUTO_RELOAD_FREQUENCY
            value: "5"
          - name: CONFIG_SERVICE_URL
            value: https://isamconfig:9443/shared_volume
          - name: CONFIG_SERVICE_USER_NAME
            value: cfgsvc
          - name: CONFIG_SERVICE_USER_PWD
            valueFrom:
              secretKeyRef:
                key: cfgsvcpw
                name: configreader
          image: docker.io/store/ibmcorp/isam:9.0.5.0
          imagePullPolicy: IfNotPresent
          name: isamdsc
          ports:
          - containerPort: 443
            protocol: TCP
          - containerPort: 444
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - SYS_PTRACE
              - SYS_RESOURCE
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/application.logs
            name: isamdsc-logs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: dockerlogin
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: isamdsc-logs
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      app: isamruntime
    name: isamruntime
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: isamruntime
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: isamruntime
      spec:
        serviceAccountName: isam
        containers:
        - env:
          - name: SERVICE
            value: runtime
          - name: CONTAINER_TIMEZONE
            value: Europe/London
          - name: AUTO_RELOAD_FREQUENCY
            value: "5"
          - name: CONFIG_SERVICE_URL
            value: https://isamconfig:9443/shared_volume
          - name: CONFIG_SERVICE_USER_NAME
            value: cfgsvc
          - name: CONFIG_SERVICE_USER_PWD
            valueFrom:
              secretKeyRef:
                key: cfgsvcpw
                name: configreader
          image: docker.io/store/ibmcorp/isam:9.0.5.0
          imagePullPolicy: IfNotPresent
          name: isamruntime
          ports:
          - containerPort: 443
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - SYS_PTRACE
              - SYS_RESOURCE
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/application.logs
            name: isamruntime-logs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: dockerlogin
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: isamruntime-logs
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      app: isamwrprp1
    name: isamwrprp1
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: isamwrprp1
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: isamwrprp1
      spec:
        serviceAccountName: isam
        containers:
        - env:
          - name: SERVICE
            value: webseal
          - name: INSTANCE
            value: rp1
          - name: CONTAINER_TIMEZONE
            value: Europe/London
          - name: AUTO_RELOAD_FREQUENCY
            value: "5"
          - name: CONFIG_SERVICE_URL
            value: https://isamconfig:9443/shared_volume
          - name: CONFIG_SERVICE_USER_NAME
            value: cfgsvc
          - name: CONFIG_SERVICE_USER_PWD
            valueFrom:
              secretKeyRef:
                key: cfgsvcpw
                name: configreader
          image: docker.io/store/ibmcorp/isam:9.0.5.0
          imagePullPolicy: IfNotPresent
          name: isamwrprp1
          ports:
          - containerPort: 443
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - SYS_PTRACE
              - SYS_RESOURCE
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/application.logs
            name: isamwrprp1-logs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: dockerlogin
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: isamwrprp1-logs
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: null
    generation: 3
    labels:
      app: openldap
    name: openldap
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: openldap
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: openldap
      spec:
        serviceAccountName: isam
        containers:
        - args:
          - --copy-service
          env:
          - name: LDAP_DOMAIN
            value: ibm.com
          - name: LDAP_ADMIN_PASSWORD
            value: Passw0rd
          - name: LDAP_CONFIG_PASSWORD
            value: Passw0rd
          image: docker.io/ibmcom/isam-openldap:9.0.5.0
          imagePullPolicy: IfNotPresent
          name: openldap
          ports:
          - containerPort: 636
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/ldap
            name: ldaplib
          - mountPath: /etc/ldap/slapd.d
            name: ldapslapd
          - mountPath: /var/lib/ldap.secAuthority
            name: ldapsecauthority
          - mountPath: /container/service/slapd/assets/certs
            name: openldap-keys
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ldapslapd
          persistentVolumeClaim:
            claimName: ldapslapd
        - name: ldaplib
          persistentVolumeClaim:
            claimName: ldaplib
        - name: ldapsecauthority
          persistentVolumeClaim:
            claimName: ldapsecauthority
        - name: openldap-keys
          secret:
            defaultMode: 420
            secretName: openldap-keys
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: null
    generation: 1
    labels:
      app: postgresql
    name: postgresql
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: postgresql
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: postgresql
      spec:
        serviceAccountName: isam
        containers:
        - env:
          - name: POSTGRES_USER
            value: postgres
          - name: POSTGRES_PASSWORD
            value: Passw0rd
          - name: POSTGRES_DB
            value: isam
          - name: POSTGRES_SSL_KEYDB
            value: /var/local/server.pem
          image: docker.io/ibmcom/isam-postgresql:9.0.5.0
          imagePullPolicy: IfNotPresent
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgresqldata
          - mountPath: /var/local
            name: postgresql-keys
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresqldata
          persistentVolumeClaim:
            claimName: postgresqldata
        - name: postgresql-keys
          secret:
            defaultMode: 420
            secretName: postgresql-keys
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: isamwrprp1
  spec:
    host: www.iamlab.ibm.com
    port:
      targetPort: isamwrprp1
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: passthrough
    to:
      kind: Service
      name: isamwrprp1
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: isamconfig
  spec:
    externalTrafficPolicy: Cluster
    ports:
    - name: isamconfig
      port: 9443
      protocol: TCP
      targetPort: 9443
    selector:
      app: isamconfig
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: isamdsc
  spec:
    ports:
    - name: isamdsc-svc
      port: 443
      protocol: TCP
      targetPort: 443
    - name: isamdsc-rep
      port: 444
      protocol: TCP
      targetPort: 444
    selector:
      app: isamdsc
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: isamruntime
  spec:
    ports:
    - name: isamruntime
      port: 443
      protocol: TCP
      targetPort: 443
    selector:
      app: isamruntime
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: isamwrprp1
  spec:
    externalTrafficPolicy: Cluster
    ports:
    - name: isamwrprp1
      port: 443
      protocol: TCP
      targetPort: 443
    selector:
      app: isamwrprp1
    sessionAffinity: ClientIP
    sessionAffinityConfig:
      clientIP:
        timeoutSeconds: 10800
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: openldap
    name: openldap
  spec:
    externalTrafficPolicy: Cluster
    ports:
    - name: ldaps
      port: 636
      protocol: TCP
      targetPort: 636
    selector:
      app: openldap
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: postgresql
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}


